package es.skyrim.alchemy.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Recipe extends BaseConcept {
  public static final String concept = "es.skyrim.alchemy.structure.Recipe";
  public static final String INGREDIENTS = "ingredients";

  public Recipe(SNode node) {
    super(node);
  }

  public int getIngredientsesCount() {
    return this.getChildCount(Recipe.INGREDIENTS);
  }

  public Iterator<IngredientReference> ingredientses() {
    return this.children(IngredientReference.class, Recipe.INGREDIENTS);
  }

  public List<IngredientReference> getIngredientses() {
    return this.getChildren(IngredientReference.class, Recipe.INGREDIENTS);
  }

  public void addIngredients(IngredientReference node) {
    this.addChild(Recipe.INGREDIENTS, node);
  }

  public void insertIngredients(IngredientReference prev, IngredientReference node) {
    this.insertChild(prev, Recipe.INGREDIENTS, node);
  }

  public static Recipe newInstance(SModel sm, boolean init) {
    return (Recipe) SModelUtil_new.instantiateConceptDeclaration("es.skyrim.alchemy.structure.Recipe", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Recipe newInstance(SModel sm) {
    return Recipe.newInstance(sm, false);
  }
}
