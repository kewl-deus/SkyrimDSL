/*
* generated by Xtext
*/
grammar InternalAlchemyLab;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package es.skyrim.alchemy.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package es.skyrim.alchemy.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import es.skyrim.alchemy.services.AlchemyLabGrammarAccess;

}

@parser::members {
 
 	private AlchemyLabGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AlchemyLabGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAlchemyLabModel
entryRuleAlchemyLabModel 
:
{ before(grammarAccess.getAlchemyLabModelRule()); }
	 ruleAlchemyLabModel
{ after(grammarAccess.getAlchemyLabModelRule()); } 
	 EOF 
;

// Rule AlchemyLabModel
ruleAlchemyLabModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlchemyLabModelAccess().getGroup()); }
(rule__AlchemyLabModel__Group__0)
{ after(grammarAccess.getAlchemyLabModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffectDef
entryRuleEffectDef 
:
{ before(grammarAccess.getEffectDefRule()); }
	 ruleEffectDef
{ after(grammarAccess.getEffectDefRule()); } 
	 EOF 
;

// Rule EffectDef
ruleEffectDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectDefAccess().getGroup()); }
(rule__EffectDef__Group__0)
{ after(grammarAccess.getEffectDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffectRef
entryRuleEffectRef 
:
{ before(grammarAccess.getEffectRefRule()); }
	 ruleEffectRef
{ after(grammarAccess.getEffectRefRule()); } 
	 EOF 
;

// Rule EffectRef
ruleEffectRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectRefAccess().getGroup()); }
(rule__EffectRef__Group__0)
{ after(grammarAccess.getEffectRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffectAlias
entryRuleEffectAlias 
:
{ before(grammarAccess.getEffectAliasRule()); }
	 ruleEffectAlias
{ after(grammarAccess.getEffectAliasRule()); } 
	 EOF 
;

// Rule EffectAlias
ruleEffectAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAliasAccess().getGroup()); }
(rule__EffectAlias__Group__0)
{ after(grammarAccess.getEffectAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIngredient
entryRuleIngredient 
:
{ before(grammarAccess.getIngredientRule()); }
	 ruleIngredient
{ after(grammarAccess.getIngredientRule()); } 
	 EOF 
;

// Rule Ingredient
ruleIngredient
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIngredientAccess().getAlternatives()); }
(rule__Ingredient__Alternatives)
{ after(grammarAccess.getIngredientAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIngredientDef
entryRuleIngredientDef 
:
{ before(grammarAccess.getIngredientDefRule()); }
	 ruleIngredientDef
{ after(grammarAccess.getIngredientDefRule()); } 
	 EOF 
;

// Rule IngredientDef
ruleIngredientDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIngredientDefAccess().getGroup()); }
(rule__IngredientDef__Group__0)
{ after(grammarAccess.getIngredientDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIngredientRef
entryRuleIngredientRef 
:
{ before(grammarAccess.getIngredientRefRule()); }
	 ruleIngredientRef
{ after(grammarAccess.getIngredientRefRule()); } 
	 EOF 
;

// Rule IngredientRef
ruleIngredientRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIngredientRefAccess().getIngredientAssignment()); }
(rule__IngredientRef__IngredientAssignment)
{ after(grammarAccess.getIngredientRefAccess().getIngredientAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIngredientAlias
entryRuleIngredientAlias 
:
{ before(grammarAccess.getIngredientAliasRule()); }
	 ruleIngredientAlias
{ after(grammarAccess.getIngredientAliasRule()); } 
	 EOF 
;

// Rule IngredientAlias
ruleIngredientAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIngredientAliasAccess().getGroup()); }
(rule__IngredientAlias__Group__0)
{ after(grammarAccess.getIngredientAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecipe
entryRuleRecipe 
:
{ before(grammarAccess.getRecipeRule()); }
	 ruleRecipe
{ after(grammarAccess.getRecipeRule()); } 
	 EOF 
;

// Rule Recipe
ruleRecipe
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecipeAccess().getGroup()); }
(rule__Recipe__Group__0)
{ after(grammarAccess.getRecipeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule EffectType
ruleEffectType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectTypeAccess().getAlternatives()); }
(rule__EffectType__Alternatives)
{ after(grammarAccess.getEffectTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Toxicity
ruleToxicity
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToxicityAccess().getAlternatives()); }
(rule__Toxicity__Alternatives)
{ after(grammarAccess.getToxicityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getEffectDefParserRuleCall_0()); }
	ruleEffectDef
{ after(grammarAccess.getEffectAccess().getEffectDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getEffectAliasParserRuleCall_1()); }
	ruleEffectAlias
{ after(grammarAccess.getEffectAccess().getEffectAliasParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ingredient__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientAccess().getIngredientDefParserRuleCall_0()); }
	ruleIngredientDef
{ after(grammarAccess.getIngredientAccess().getIngredientDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIngredientAccess().getIngredientAliasParserRuleCall_1()); }
	ruleIngredientAlias
{ after(grammarAccess.getIngredientAccess().getIngredientAliasParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EffectType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectTypeAccess().getFORTIFYEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getEffectTypeAccess().getFORTIFYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEffectTypeAccess().getWEAKENEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getEffectTypeAccess().getWEAKENEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Toxicity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToxicityAccess().getPOTIONEnumLiteralDeclaration_0()); }
(	'potion' 
)
{ after(grammarAccess.getToxicityAccess().getPOTIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getToxicityAccess().getPOISONEnumLiteralDeclaration_1()); }
(	'poison' 
)
{ after(grammarAccess.getToxicityAccess().getPOISONEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getToxicityAccess().getMIXTUREEnumLiteralDeclaration_2()); }
(	'mixture' 
)
{ after(grammarAccess.getToxicityAccess().getMIXTUREEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AlchemyLabModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlchemyLabModel__Group__0__Impl
	rule__AlchemyLabModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlchemyLabModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlchemyLabModelAccess().getEffectsAssignment_0()); }
(rule__AlchemyLabModel__EffectsAssignment_0)*
{ after(grammarAccess.getAlchemyLabModelAccess().getEffectsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlchemyLabModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlchemyLabModel__Group__1__Impl
	rule__AlchemyLabModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlchemyLabModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlchemyLabModelAccess().getIngredientsAssignment_1()); }
(rule__AlchemyLabModel__IngredientsAssignment_1)*
{ after(grammarAccess.getAlchemyLabModelAccess().getIngredientsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlchemyLabModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlchemyLabModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlchemyLabModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlchemyLabModelAccess().getRecipesAssignment_2()); }
(rule__AlchemyLabModel__RecipesAssignment_2)*
{ after(grammarAccess.getAlchemyLabModelAccess().getRecipesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EffectDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group__0__Impl
	rule__EffectDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getEffectKeyword_0()); }

	'effect' 

{ after(grammarAccess.getEffectDefAccess().getEffectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group__1__Impl
	rule__EffectDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getNameAssignment_1()); }
(rule__EffectDef__NameAssignment_1)
{ after(grammarAccess.getEffectDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group__2__Impl
	rule__EffectDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getEffectDefAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group__3__Impl
	rule__EffectDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getTypeAssignment_3()); }
(rule__EffectDef__TypeAssignment_3)
{ after(grammarAccess.getEffectDefAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group__4__Impl
	rule__EffectDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getEffectDefAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getGroup_5()); }
(rule__EffectDef__Group_5__0)?
{ after(grammarAccess.getEffectDefAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EffectDef__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group_5__0__Impl
	rule__EffectDef__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getEffectDefAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectDef__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectDef__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getDescriptionAssignment_5_1()); }
(rule__EffectDef__DescriptionAssignment_5_1)
{ after(grammarAccess.getEffectDefAccess().getDescriptionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EffectRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectRef__Group__0__Impl
	rule__EffectRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectRefAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	'->' 

{ after(grammarAccess.getEffectRefAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectRefAccess().getEffectAssignment_1()); }
(rule__EffectRef__EffectAssignment_1)
{ after(grammarAccess.getEffectRefAccess().getEffectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EffectAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectAlias__Group__0__Impl
	rule__EffectAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAliasAccess().getEaliasKeyword_0()); }

	'ealias' 

{ after(grammarAccess.getEffectAliasAccess().getEaliasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectAlias__Group__1__Impl
	rule__EffectAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAliasAccess().getAliasAssignment_1()); }
(rule__EffectAlias__AliasAssignment_1)
{ after(grammarAccess.getEffectAliasAccess().getAliasAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectAlias__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectAlias__Group__2__Impl
	rule__EffectAlias__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectAlias__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAliasAccess().getForKeyword_2()); }

	'for' 

{ after(grammarAccess.getEffectAliasAccess().getForKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EffectAlias__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EffectAlias__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EffectAlias__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAliasAccess().getEffectAssignment_3()); }
(rule__EffectAlias__EffectAssignment_3)
{ after(grammarAccess.getEffectAliasAccess().getEffectAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IngredientDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__0__Impl
	rule__IngredientDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getIngredientKeyword_0()); }

	'ingredient' 

{ after(grammarAccess.getIngredientDefAccess().getIngredientKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__1__Impl
	rule__IngredientDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getNameAssignment_1()); }
(rule__IngredientDef__NameAssignment_1)
{ after(grammarAccess.getIngredientDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__2__Impl
	rule__IngredientDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getIngredientDefAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__3__Impl
	rule__IngredientDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getEffectsAssignment_3()); }
(rule__IngredientDef__EffectsAssignment_3)*
{ after(grammarAccess.getIngredientDefAccess().getEffectsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__4__Impl
	rule__IngredientDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getPriceKeyword_4()); }

	'price:' 

{ after(grammarAccess.getIngredientDefAccess().getPriceKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__5__Impl
	rule__IngredientDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getPriceAssignment_5()); }
(rule__IngredientDef__PriceAssignment_5)
{ after(grammarAccess.getIngredientDefAccess().getPriceAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__6__Impl
	rule__IngredientDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getWeightKeyword_6()); }

	'weight:' 

{ after(grammarAccess.getIngredientDefAccess().getWeightKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__7__Impl
	rule__IngredientDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getWeightAssignment_7()); }
(rule__IngredientDef__WeightAssignment_7)
{ after(grammarAccess.getIngredientDefAccess().getWeightAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__8__Impl
	rule__IngredientDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getGroup_8()); }
(rule__IngredientDef__Group_8__0)?
{ after(grammarAccess.getIngredientDefAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getIngredientDefAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__IngredientDef__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group_8__0__Impl
	rule__IngredientDef__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getSourceKeyword_8_0()); }

	'source:' 

{ after(grammarAccess.getIngredientDefAccess().getSourceKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientDef__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientDef__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getSourceAssignment_8_1()); }
(rule__IngredientDef__SourceAssignment_8_1)
{ after(grammarAccess.getIngredientDefAccess().getSourceAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IngredientAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientAlias__Group__0__Impl
	rule__IngredientAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientAliasAccess().getIaliasKeyword_0()); }

	'ialias' 

{ after(grammarAccess.getIngredientAliasAccess().getIaliasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientAlias__Group__1__Impl
	rule__IngredientAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientAliasAccess().getAliasAssignment_1()); }
(rule__IngredientAlias__AliasAssignment_1)
{ after(grammarAccess.getIngredientAliasAccess().getAliasAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientAlias__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientAlias__Group__2__Impl
	rule__IngredientAlias__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientAlias__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientAliasAccess().getForKeyword_2()); }

	'for' 

{ after(grammarAccess.getIngredientAliasAccess().getForKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IngredientAlias__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IngredientAlias__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientAlias__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientAliasAccess().getIngredientAssignment_3()); }
(rule__IngredientAlias__IngredientAssignment_3)
{ after(grammarAccess.getIngredientAliasAccess().getIngredientAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Recipe__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__0__Impl
	rule__Recipe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getToxicityAssignment_0()); }
(rule__Recipe__ToxicityAssignment_0)
{ after(grammarAccess.getRecipeAccess().getToxicityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__1__Impl
	rule__Recipe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getNameAssignment_1()); }
(rule__Recipe__NameAssignment_1)
{ after(grammarAccess.getRecipeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__2__Impl
	rule__Recipe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRecipeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__3__Impl
	rule__Recipe__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecipeAccess().getEffectsAssignment_3()); }
(rule__Recipe__EffectsAssignment_3)
{ after(grammarAccess.getRecipeAccess().getEffectsAssignment_3()); }
)
(
{ before(grammarAccess.getRecipeAccess().getEffectsAssignment_3()); }
(rule__Recipe__EffectsAssignment_3)*
{ after(grammarAccess.getRecipeAccess().getEffectsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__4__Impl
	rule__Recipe__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getGroup_4()); }
(rule__Recipe__Group_4__0)?
{ after(grammarAccess.getRecipeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__5__Impl
	rule__Recipe__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRecipeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__6__Impl
	rule__Recipe__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getEqualsSignKeyword_6()); }

	'=' 

{ after(grammarAccess.getRecipeAccess().getEqualsSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__7__Impl
	rule__Recipe__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getIngredientsAssignment_7()); }
(rule__Recipe__IngredientsAssignment_7)
{ after(grammarAccess.getRecipeAccess().getIngredientsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getGroup_8()); }
(rule__Recipe__Group_8__0)*
{ after(grammarAccess.getRecipeAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Recipe__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group_4__0__Impl
	rule__Recipe__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getPriceKeyword_4_0()); }

	'price:' 

{ after(grammarAccess.getRecipeAccess().getPriceKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getPriceAssignment_4_1()); }
(rule__Recipe__PriceAssignment_4_1)
{ after(grammarAccess.getRecipeAccess().getPriceAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Recipe__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group_8__0__Impl
	rule__Recipe__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getPlusSignKeyword_8_0()); }

	'+' 

{ after(grammarAccess.getRecipeAccess().getPlusSignKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Recipe__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Recipe__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getIngredientsAssignment_8_1()); }
(rule__Recipe__IngredientsAssignment_8_1)
{ after(grammarAccess.getRecipeAccess().getIngredientsAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__AlchemyLabModel__EffectsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlchemyLabModelAccess().getEffectsEffectParserRuleCall_0_0()); }
	ruleEffect{ after(grammarAccess.getAlchemyLabModelAccess().getEffectsEffectParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlchemyLabModel__IngredientsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlchemyLabModelAccess().getIngredientsIngredientParserRuleCall_1_0()); }
	ruleIngredient{ after(grammarAccess.getAlchemyLabModelAccess().getIngredientsIngredientParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlchemyLabModel__RecipesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlchemyLabModelAccess().getRecipesRecipeParserRuleCall_2_0()); }
	ruleRecipe{ after(grammarAccess.getAlchemyLabModelAccess().getRecipesRecipeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEffectDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getTypeEffectTypeEnumRuleCall_3_0()); }
	ruleEffectType{ after(grammarAccess.getEffectDefAccess().getTypeEffectTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EffectDef__DescriptionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectDefAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getEffectDefAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EffectRef__EffectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectRefAccess().getEffectEffectCrossReference_1_0()); }
(
{ before(grammarAccess.getEffectRefAccess().getEffectEffectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEffectRefAccess().getEffectEffectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEffectRefAccess().getEffectEffectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EffectAlias__AliasAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAliasAccess().getAliasIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEffectAliasAccess().getAliasIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EffectAlias__EffectAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAliasAccess().getEffectEffectDefCrossReference_3_0()); }
(
{ before(grammarAccess.getEffectAliasAccess().getEffectEffectDefIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getEffectAliasAccess().getEffectEffectDefIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getEffectAliasAccess().getEffectEffectDefCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIngredientDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__EffectsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getEffectsEffectRefParserRuleCall_3_0()); }
	ruleEffectRef{ after(grammarAccess.getIngredientDefAccess().getEffectsEffectRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__PriceAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getPriceNUMBERTerminalRuleCall_5_0()); }
	RULE_NUMBER{ after(grammarAccess.getIngredientDefAccess().getPriceNUMBERTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__WeightAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getWeightNUMBERTerminalRuleCall_7_0()); }
	RULE_NUMBER{ after(grammarAccess.getIngredientDefAccess().getWeightNUMBERTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientDef__SourceAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientDefAccess().getSourceSTRINGTerminalRuleCall_8_1_0()); }
	RULE_STRING{ after(grammarAccess.getIngredientDefAccess().getSourceSTRINGTerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientRef__IngredientAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientRefAccess().getIngredientIngredientCrossReference_0()); }
(
{ before(grammarAccess.getIngredientRefAccess().getIngredientIngredientIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getIngredientRefAccess().getIngredientIngredientIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getIngredientRefAccess().getIngredientIngredientCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientAlias__AliasAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientAliasAccess().getAliasIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIngredientAliasAccess().getAliasIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IngredientAlias__IngredientAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIngredientAliasAccess().getIngredientIngredientDefCrossReference_3_0()); }
(
{ before(grammarAccess.getIngredientAliasAccess().getIngredientIngredientDefIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getIngredientAliasAccess().getIngredientIngredientDefIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getIngredientAliasAccess().getIngredientIngredientDefCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__ToxicityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getToxicityToxicityEnumRuleCall_0_0()); }
	ruleToxicity{ after(grammarAccess.getRecipeAccess().getToxicityToxicityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRecipeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__EffectsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getEffectsEffectRefParserRuleCall_3_0()); }
	ruleEffectRef{ after(grammarAccess.getRecipeAccess().getEffectsEffectRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__PriceAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getPriceNUMBERTerminalRuleCall_4_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getRecipeAccess().getPriceNUMBERTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__IngredientsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getIngredientsIngredientRefParserRuleCall_7_0()); }
	ruleIngredientRef{ after(grammarAccess.getRecipeAccess().getIngredientsIngredientRefParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Recipe__IngredientsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeAccess().getIngredientsIngredientRefParserRuleCall_8_1_0()); }
	ruleIngredientRef{ after(grammarAccess.getRecipeAccess().getIngredientsIngredientRefParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '"' '^'? ('a'..'z'|'A'..'Z'|' '|'\u00E4'|'\u00C4'|'\u00F6'|'\u00D6'|'\u00DC'|'\u00FC'|'\u00DF'|'\'')+ '"';

RULE_STRING : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_NUMBER : ('0'..'9')+ ('.' ('0'..'9')+)?;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


